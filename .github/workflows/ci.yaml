name: WebExtension Lint, Build, Test

on:
    push:
        branches:
            - master
            - dev
    pull_request:
        types:
            - opened
            - synchronize
            - reopened
            - labeled
    workflow_dispatch:
        inputs:
            nightly:
                description: "Nightly Release"
                default: true
                type: boolean

            store-upload:
                type: boolean
                default: false
                description: "Upload to CWS/AMO"

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    ARTIFACT_NAME: 7tv-webextension
    NIGHTLY_EXTENSION_ID_CWS: fphegifdehlodcepfkgofelcenelpedj
    NIGHTLY_EXTENSION_ID_AMO: "{7cc17731-b734-4c98-a154-51d2bf266ef4}"

jobs:
    ci:
        name: WebExtension Lint, Build, Test
        runs-on: aws-runner
        concurrency:
            group: ${{ github.workflow }}-ci-${{ github.ref }}
            cancel-in-progress: true

        steps:
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: 1.18.3

            - uses: actions/setup-node@v3
              with:
                  node-version: "18"

            - name: Install Yarn
              run: npm install -g yarn

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Node Modules Cache
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

            - name: Install Dependencies
              run: |
                  yarn

            - name: Run Linter
              run: yarn lint

            - name: Build App
              env:
                  BRANCH: ${{ inputs.nightly && 'beta' || ''  }}
              run: |
                  OUT_DIR=mv3 yarn build:prod
                  OUT_DIR=mv2 MV2=true yarn build:prod

            - name: Create Build Archives
              run: |
                  apt-get update && apt-get install -y zip
                  cd dist/mv3 && zip -r ../mv3.zip . && cd ../../
                  cd dist/mv2 && zip -r ../mv2.zip .

            # CRX is Chromium installer
            - name: Create CRX (Chromium)
              uses: cardinalby/webext-buildtools-chrome-crx-action@v2
              with:
                  zipFilePath: dist/mv3.zip
                  crxFilePath: dist/ext.crx
                  privateKey: ${{ secrets.WEB_EXTENSION_CRX }}

            # XPI is Firefox installer
            - name: Create XPI (Firefox)
              id: web-ext-build
              uses: kewisch/action-web-ext@v1
              with:
                  cmd: build
                  source: dist/mv2
                  filename: ext.xpi

            - name: Structure Files
              run: |
                  mv ${{ steps.web-ext-build.outputs.target }} dist/ext.xpi

                  mkdir -p dist/manifest
                  cp dist/mv2/manifest.json dist/manifest/manifest.mv2.json
                  cp dist/mv3/manifest.json dist/manifest/manifest.mv3.json

            - name: Upload Build Artifact
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  retention-days: 60
                  path: |
                      dist/ext.crx
                      dist/ext.xpi
                      dist/mv3.zip
                      dist/mv2.zip

            - name: Upload Manifest
              uses: actions/upload-artifact@v3
              with:
                  name: manifest
                  path: dist/manifest

    release:
        name: Create Release
        runs-on: aws-runner
        needs: [ci]
        if: ${{ (inputs.nightly) || (github.event_name == 'push' && github.ref_type == 'branch' && github.ref_name == 'master') }}

        steps:
            - uses: actions/checkout@v3

            - name: Download Artifact
              uses: actions/download-artifact@v3
              with:
                  name: build
                  path: ext

            - name: File Names
              run: |
                  cd ext/
                  for file in *; do
                      mv "$file" "7tv-webextension-$file"
                  done

            - name: Delete Tag
              continue-on-error: true
              run: git push --delete origin nightly-release

            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  name: Nightly Release
                  tag_name: nightly-release
                  prerelease: true
                  draft: false
                  files: ext/*

    push:
        name: Submit to CWS/AMO
        runs-on: aws-runner
        needs: [ci, release]
        if: ${{ inputs.store-upload }}

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"

            # Retrieve the non-CRX MV3 zip to be uploaded to CWS
            - name: Download Artifact (Chromium)
              uses: actions/download-artifact@v3
              with:
                  name: build
                  path: ext

            # Get the XPI File for Firefox
            # It will be uploaded to AMO
            - name: Download Manifest
              uses: actions/download-artifact@v3
              with:
                  name: manifest
                  path: manifest

            - name: CLI Setup
              run: |
                  npm install -g chrome-webstore-upload-cli

            - name: Upload to CWS
              env:
                  CREDENTIALS: ${{ secrets.CWS }}
                  EXTENSION_ID: ${{ env.NIGHTLY_EXTENSION_ID_CWS }}
              run: |
                  echo "${{ env.CREDENTIALS }}" >> c

                  chrome-webstore-upload upload \
                    --source ext/mv3.zip \
                    --extension-id $EXTENSION_ID \
                    --client-id "$(sed '1q;d' c)" \
                    --client-secret "$(sed '2q;d' c)" \
                    --refresh-token "$(sed '3q;d' c)"

            - name: Upload to AMO
              uses: trmcnvn/firefox-addon@v1
              with:
                  uuid: ${{ env.NIGHTLY_EXTENSION_ID_AMO }}
                  xpi: ext/ext.xpi
                  manifest: manifest/manifest.mv2.json
                  api-key: ${{ secrets.AMO_API_KEY }}
                  api-secret: ${{ secrets.AMO_API_SECRET }}
